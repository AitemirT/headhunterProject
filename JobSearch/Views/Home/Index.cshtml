@model JobSearch.ViewModels.IndexViewModel

@{
    ViewBag.Title = "Главная";
}

<div class="row mb-4">
    <div class="col-6 mx-auto">
        <div class="row mb-3">

            <div class="col-6">
                <div class="container-fluid">
                    <select id="filterSelect" class="form-select" aria-label="Default select example">
                        <option value="-1" selected>Все</option>
                        @foreach (JobCategory jc in ViewBag.JobCategories)
                        {
                            <option value="@jc.Id" >@jc.Name</option>
                        }
                    </select>
                </div>
            </div>

            <div class="col-6">
                <div class="container-fluid">
                    <form class="d-flex" role="search">
                        <input id="vacancySearchInput" class="form-control me-2" type="search" placeholder="Вакансия..." aria-label="Search">
                    </form>
                </div>
            </div>
            
        </div>
        
        <div>
            <div class="d-flex justify-content-around">
                <button type="button" class="btn btn-outline-secondary" id="dateSortBtn">Сортировать по дате</button>
                <button type="button" class="btn btn-outline-secondary" id="salarySortBtn">Сортировать по зарплате</button>
            </div>
        </div>
    </div>
</div>


<div id="indexBlock">
    @{
        await Html.RenderPartialAsync("_IndexPartialview", Model);
    }
</div>


@section Scripts
{
    <script>
        let vacancySearchInput = $('#vacancySearchInput');
        let filterSelect = $('#filterSelect');
        
        let dateSortBtn = $('#dateSortBtn');
        let salarySortBtn = $('#salarySortBtn');

        let indexBlock = $('#indexBlock');
        
        let isDateAscSorted = false;
        let isSalaryAsSorted = false;
        
        let page = 1;
        let search = "";
        let filter = -1;
        let sortOrder = "";

        function getData() {
            $.ajax({
                url: '@Url.Action("IndexWithParams", "Home")',
                type: 'GET',
                data: {
                    'search': search,
                    'filter': filter,
                    'sortOrder': sortOrder,
                    'page': page
                },
                success: function (response) {
                    indexBlock.html(response);
                }
            });
        }

        vacancySearchInput.on('input', function () {
            page = 1;
            search = vacancySearchInput.val();
            getData();
        });

        filterSelect.on('change', function () {
            page = 1;
            filter = filterSelect.val();
            getData();
        });

        dateSortBtn.on('click', function () {
            page = 1;
            sortOrder = isDateAscSorted ? 'dateDesc' : 'dateAsc';
            isDateAscSorted = !isDateAscSorted;
            isSalaryAsSorted = false;
            getData();
        });

        salarySortBtn.on('click', function () {
            page = 1;
            sortOrder = isSalaryAsSorted ? 'salaryDesc' : 'salaryAsc';
            isSalaryAsSorted = !isSalaryAsSorted;
            isDateAscSorted = false;
            getData();
        });

        function changePage(nextPage) {
            page = nextPage;
            getData();
        }

        function moveToDetails(url, event) {
            if (event.target.tagName === 'A' || event.target.closest('a')) {
                return;
            }

            window.location.assign(url);
        }
    
    </script>
}